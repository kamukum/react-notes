{"ast":null,"code":"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'; // 类式组件\n\n/* class Demo extends Component {\r\n  state = {count: 0}\r\n\r\n  myRef = React.createRef()\r\n\r\n  add = () => {\r\n    this.setState(state => ({count:state.count+1}))\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.timer = setInterval(() => {\r\n      this.setState(state=> ({count:state.count+1}))\r\n    }, 1000)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  destory = () => {\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n  }\r\n\r\n  show = () => {\r\n    alert(this.myRef.current.value)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input ref={this.myRef} type=\"text\" />\r\n        <h2>当前求和为{this.state.count}</h2>\r\n        <button onClick={this.add}>+</button>\r\n        <button onClick={this.destory}>卸载</button>\r\n        <button onClick={this.show}>点击提示数据</button>\r\n      </div>\r\n    )\r\n  }\r\n} */\n// 函数式组件\n\n/* function Demo(){\r\n  const [count, setCount] = React.useState(0)\r\n  const [name, setName] = React.useState(\"Tom\")\r\n\r\n  React.useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      setCount(count => count+1)\r\n    },1000)\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  function add(){\r\n    setCount(count => count+1)\r\n  }\r\n\r\n  function change(){\r\n    setName('Jack')\r\n  }\r\n\r\n  function destory(){\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>当前求和为{count}</h2>\r\n      <h2>我的名字是：{name}</h2>\r\n      <button onClick={add}>+</button>\r\n      <button onClick={change}> 点我改名</button>\r\n      <button onClick={destory}>卸载</button>\r\n    </div>\r\n  )\r\n} */\n\nexport default Demo;","map":{"version":3,"names":["React","Component","ReactDOM","Demo"],"sources":["D:/OneDrive/桌面/react笔记/脚手架create_react_app/react_extension/src/components/03-hooks/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport  ReactDOM  from 'react-dom'\r\n\r\n// 类式组件\r\n/* class Demo extends Component {\r\n  state = {count: 0}\r\n\r\n  myRef = React.createRef()\r\n\r\n  add = () => {\r\n    this.setState(state => ({count:state.count+1}))\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.timer = setInterval(() => {\r\n      this.setState(state=> ({count:state.count+1}))\r\n    }, 1000)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  destory = () => {\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n  }\r\n\r\n  show = () => {\r\n    alert(this.myRef.current.value)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input ref={this.myRef} type=\"text\" />\r\n        <h2>当前求和为{this.state.count}</h2>\r\n        <button onClick={this.add}>+</button>\r\n        <button onClick={this.destory}>卸载</button>\r\n        <button onClick={this.show}>点击提示数据</button>\r\n      </div>\r\n    )\r\n  }\r\n} */\r\n\r\n// 函数式组件\r\n/* function Demo(){\r\n  const [count, setCount] = React.useState(0)\r\n  const [name, setName] = React.useState(\"Tom\")\r\n\r\n  React.useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      setCount(count => count+1)\r\n    },1000)\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [])\r\n\r\n  function add(){\r\n    setCount(count => count+1)\r\n  }\r\n\r\n  function change(){\r\n    setName('Jack')\r\n  }\r\n\r\n  function destory(){\r\n    ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>当前求和为{count}</h2>\r\n      <h2>我的名字是：{name}</h2>\r\n      <button onClick={add}>+</button>\r\n      <button onClick={change}> 点我改名</button>\r\n      <button onClick={destory}>卸载</button>\r\n    </div>\r\n  )\r\n} */\r\n\r\n\r\nexport default Demo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAQC,QAAR,MAAuB,WAAvB,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeC,IAAf"},"metadata":{},"sourceType":"module"}