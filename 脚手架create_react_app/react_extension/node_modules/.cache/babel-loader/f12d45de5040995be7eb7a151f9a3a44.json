{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\\\u684C\\u9762\\\\react\\u7B14\\u8BB0\\\\\\u811A\\u624B\\u67B6create_react_app\\\\react_extension\\\\src\\\\components\\\\03-hooks\\\\index.jsx\";\nimport React, { Component } from 'react'; // 类式组件\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Demo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0\n    };\n\n    this.add = () => {\n      this.setState(state => ({\n        count: state.count + 1\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u5F53\\u524D\\u6C42\\u548C\\u4E3A\", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.add,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 函数式组件\n// function Demo(){\n//   const [count, setCount] = React.useState(0)\n//   const [name, setName] = React.useState(\"Tom\")\n//   function add(){\n//     setCount(count => count+1)\n//   }\n//   function change(){\n//     setName('Jack')\n//   }\n//   return (\n//     <div>\n//       <h2>当前求和为{count}</h2>\n//       <h2>我的名字是：{name}</h2>\n//       <button onClick={add}>+</button>\n//       <button onClick={change}> 点我改名</button>\n//     </div>\n//   )\n// }\n\n\nexport default Demo;","map":{"version":3,"names":["React","Component","Demo","state","count","add","setState","render"],"sources":["D:/OneDrive/桌面/react笔记/脚手架create_react_app/react_extension/src/components/03-hooks/index.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\n// 类式组件\r\nclass Demo extends Component {\r\n  state = {count: 0}\r\n\r\n  add = () => {\r\n    this.setState(state => ({count:state.count+1}))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>当前求和为{this.state.count}</h2>\r\n        <button onClick={this.add}>+</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 函数式组件\r\n// function Demo(){\r\n//   const [count, setCount] = React.useState(0)\r\n//   const [name, setName] = React.useState(\"Tom\")\r\n\r\n//   function add(){\r\n//     setCount(count => count+1)\r\n//   }\r\n\r\n//   function change(){\r\n//     setName('Jack')\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>当前求和为{count}</h2>\r\n//       <h2>我的名字是：{name}</h2>\r\n//       <button onClick={add}>+</button>\r\n//       <button onClick={change}> 点我改名</button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\nexport default Demo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AACA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;EAAA;IAAA;IAAA,KAC3BE,KAD2B,GACnB;MAACC,KAAK,EAAE;IAAR,CADmB;;IAAA,KAG3BC,GAH2B,GAGrB,MAAM;MACV,KAAKC,QAAL,CAAcH,KAAK,KAAK;QAACC,KAAK,EAACD,KAAK,CAACC,KAAN,GAAY;MAAnB,CAAL,CAAnB;IACD,CAL0B;EAAA;;EAO3BG,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAA,6CAAU,KAAKJ,KAAL,CAAWC,KAArB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAE,KAAKC,GAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAd0B,C,CAiB7B;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeH,IAAf"},"metadata":{},"sourceType":"module"}