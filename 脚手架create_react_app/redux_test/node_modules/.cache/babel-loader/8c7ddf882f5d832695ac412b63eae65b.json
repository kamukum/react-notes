{"ast":null,"code":"/* \r\n  1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n  2.reducer函数会接受两个参数，一个是之前的状态（preState)，一个是动作对象（action）\r\n*/import{INCREMENT,DECREMENT}from'../constant';var initState=0;export default function countReducer(){var preState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;// if(preState === undefined) preState = 0\n// 从action对象中获取：type， data\nvar type=action.type,data=action.data;// 根据type决定如何加工数据\nswitch(type){case INCREMENT:return preState+data;case DECREMENT:return preState-data;default:return preState;}}","map":{"version":3,"names":["INCREMENT","DECREMENT","initState","countReducer","preState","action","type","data"],"sources":["D:/OneDrive/桌面/react笔记/脚手架create_react_app/redux_test/src/redux/reducers/count.js"],"sourcesContent":["/* \r\n  1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n  2.reducer函数会接受两个参数，一个是之前的状态（preState)，一个是动作对象（action）\r\n*/\r\nimport {INCREMENT, DECREMENT} from '../constant'\r\n\r\n\r\nconst initState = 0\r\nexport default function countReducer(preState=initState, action) {\r\n  // if(preState === undefined) preState = 0\r\n  // 从action对象中获取：type， data\r\n  const { type, data } = action\r\n  // 根据type决定如何加工数据\r\n  switch (type) {\r\n    case INCREMENT:\r\n      return preState + data\r\n    case DECREMENT:\r\n      return preState - data\r\n\r\n    default:\r\n      return preState\r\n  }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA,EACA,OAAQA,SAAR,CAAmBC,SAAnB,KAAmC,aAAnC,CAGA,GAAMC,UAAS,CAAG,CAAlB,CACA,cAAe,SAASC,aAAT,EAAkD,IAA5BC,SAA4B,2DAAnBF,SAAmB,IAARG,OAAQ,2CAC/D;AACA;AACA,GAAQC,KAAR,CAAuBD,MAAvB,CAAQC,IAAR,CAAcC,IAAd,CAAuBF,MAAvB,CAAcE,IAAd,CACA;AACA,OAAQD,IAAR,EACE,IAAKN,UAAL,CACE,MAAOI,SAAQ,CAAGG,IAAlB,CACF,IAAKN,UAAL,CACE,MAAOG,SAAQ,CAAGG,IAAlB,CAEF,QACE,MAAOH,SAAP,CAPJ,CASD"},"metadata":{},"sourceType":"module"}