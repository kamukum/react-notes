{"ast":null,"code":"// 引入CountUI组件\nimport CountUI from '../../components/Count'; // 引入connect用于连接UI组件与redux\n\nimport { connect } from 'react-redux'; // a函数的返回的对象中的key作为传递给UI组件的props的key，value就作为传递给Ui组件的props的value-状态\n\nconst a = state => {\n  return {\n    count: state\n  };\n}; // a函数的返回的对象中的key作为传递给UI组件的props的key，value就作为传递给Ui组件的props的value-操作状态的方法\n\n\nconst b = () => {\n  return {\n    jia: number => {\n      // 通知redux执行加法\n      StorageEvent.dispatch();\n    }\n  };\n}; // 创建并暴露一个Count的容器组件\n\n\nexport default connect(a, b)(CountUI);","map":{"version":3,"names":["CountUI","connect","a","state","count","b","jia","number","StorageEvent","dispatch"],"sources":["D:/OneDrive/桌面/react笔记/脚手架create_react_app/redux_test/src/containers/Count/index.jsx"],"sourcesContent":["// 引入CountUI组件\r\nimport CountUI from '../../components/Count'\r\n\r\n\r\n// 引入connect用于连接UI组件与redux\r\nimport { connect } from 'react-redux'\r\n\r\n// a函数的返回的对象中的key作为传递给UI组件的props的key，value就作为传递给Ui组件的props的value-状态\r\nconst a = (state) => {\r\n  return {count:state}\r\n}\r\n\r\n// a函数的返回的对象中的key作为传递给UI组件的props的key，value就作为传递给Ui组件的props的value-操作状态的方法\r\nconst b = () => {\r\n return {jia:(number) => {\r\n  // 通知redux执行加法\r\n  StorageEvent.dispatch()\r\n }}\r\n}\r\n\r\n\r\n// 创建并暴露一个Count的容器组件\r\nexport default connect(a, b)(CountUI)\r\n"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB,C,CAGA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,MAAMC,CAAC,GAAIC,KAAD,IAAW;EACnB,OAAO;IAACC,KAAK,EAACD;EAAP,CAAP;AACD,CAFD,C,CAIA;;;AACA,MAAME,CAAC,GAAG,MAAM;EACf,OAAO;IAACC,GAAG,EAAEC,MAAD,IAAY;MACvB;MACAC,YAAY,CAACC,QAAb;IACA;EAHM,CAAP;AAIA,CALD,C,CAQA;;;AACA,eAAeR,OAAO,CAACC,CAAD,EAAIG,CAAJ,CAAP,CAAcL,OAAd,CAAf"},"metadata":{},"sourceType":"module"}