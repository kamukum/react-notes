{"ast":null,"code":"/* \r\n  1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n  2.reducer函数会接受两个参数，一个是之前的状态（preState)，一个是动作对象（action）\r\n*/\nimport { INCREMENT, DECREMENT } from './constant';\nconst initState = 0;\nexport default function countReducer() {\n  let preState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // if(preState === undefined) preState = 0\n  // 从action对象中获取：type， data\n  const {\n    type,\n    data\n  } = action; // 根据type决定如何加工数据\n\n  switch (type) {\n    case 'increment':\n      return preState + data;\n\n    case 'decrement':\n      return preState - data;\n\n    default:\n      return preState;\n  }\n}","map":{"version":3,"names":["INCREMENT","DECREMENT","initState","countReducer","preState","action","type","data"],"sources":["D:/OneDrive/桌面/react笔记/脚手架create_react_app/redux_test/src/redux/count_reducer.js"],"sourcesContent":["/* \r\n  1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n  2.reducer函数会接受两个参数，一个是之前的状态（preState)，一个是动作对象（action）\r\n*/\r\nimport {INCREMENT, DECREMENT} from './constant'\r\n\r\n\r\nconst initState = 0\r\nexport default function countReducer(preState=initState, action) {\r\n  // if(preState === undefined) preState = 0\r\n  // 从action对象中获取：type， data\r\n  const { type, data } = action\r\n  // 根据type决定如何加工数据\r\n  switch (type) {\r\n    case 'increment':\r\n      return preState + data\r\n    case 'decrement':\r\n      return preState - data\r\n\r\n    default:\r\n      return preState\r\n  }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAQA,SAAR,EAAmBC,SAAnB,QAAmC,YAAnC;AAGA,MAAMC,SAAS,GAAG,CAAlB;AACA,eAAe,SAASC,YAAT,GAAkD;EAAA,IAA5BC,QAA4B,uEAAnBF,SAAmB;EAAA,IAARG,MAAQ;EAC/D;EACA;EACA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAiBF,MAAvB,CAH+D,CAI/D;;EACA,QAAQC,IAAR;IACE,KAAK,WAAL;MACE,OAAOF,QAAQ,GAAGG,IAAlB;;IACF,KAAK,WAAL;MACE,OAAOH,QAAQ,GAAGG,IAAlB;;IAEF;MACE,OAAOH,QAAP;EAPJ;AASD"},"metadata":{},"sourceType":"module"}